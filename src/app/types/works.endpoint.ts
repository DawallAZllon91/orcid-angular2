import { ExternalIdentifier, MonthDayYearDate, Value } from './common.endpoint'
export interface Citation {
  citation: Value
  citationType: Value
  errors: any[]
  getRequiredMessage?: any
  required: boolean
}

export interface Work {
  visibility: Value
  errors: any[] // TODO is this always empty?
  publicationDate: MonthDayYearDate
  putCode: Value
  shortDescription?: Value
  url?: Value
  journalTitle?: Value
  languageCode?: Value
  languageName?: Value
  citation?: Citation
  countryCode?: Value
  countryName?: Value
  contributors?: [any] // TODO is this always empty?
  workExternalIdentifiers: ExternalIdentifier[]
  source: string
  sourceName: string
  title: Value
  subtitle?: Value
  translatedTitle?: any // TODO is this always empty?
  workCategory?: Value
  workType: Value
  dateSortString?: string
  createdDate?: MonthDayYearDate
  lastModified?: MonthDayYearDate
  userSource: boolean
}

export enum WorkCategories {
  publication = 'publication',
  conference = 'conference',
  intellectual_property = 'intellectual_property',
  other_output = 'other_output',
}

export enum WorkPublicationTypes {
  book = 'book',
  bookChapter = 'book-chapter',
  bookReview = 'book-review',
  dictionaryEntry = 'dictionary-entry',
  dissertationThesis = 'dissertation-thesis',
  editedBook = 'edited-book',
  encyclopediaEntry = 'encyclopedia-entry',
  journalArticle = 'journal-article',
  journalIssue = 'journal-issue',
  magazineArticle = 'magazine-article',
  manual = 'manual',
  newsletterArticle = 'newsletter-article',
  newspaperArticle = 'newspaper-article',
  onlineResource = 'online-resource',
  preprint = 'preprint',
  report = 'report',
  researchTool = 'research-tool',
  supervisedStudentPublication = 'supervised-student-publication',
  test = 'test',
  translation = 'translation',
  website = 'website',
  workingPaper = 'working-paper',
}

export enum WorkConferenceTypes {
  conferenceAbstract = 'conference-abstract',
  conferencePaper = 'conference-paper',
  conferencePoster = 'conference-poster',
}

export enum WorkIntellectualPropertyTypes {
  disclosure = 'disclosure',
  license = 'license',
  patent = 'patent',
  registeredCopyright = 'registered-copyright',
  trademark = 'trademark',
}

export enum WorkOtherOutputTypes {
  annotation = 'annotation',
  artisticPerformance = 'artistic-performance',
  dataManagementPlan = 'data-management-plan', //
  dataSet = 'data-set',
  invention = 'invention',
  lectureSpeech = 'lecture-speech',
  other = 'other',
  physicalObject = 'physical-object',
  researchTechnique = 'research-technique',
  software = 'software', //
  spinOffCompany = 'spin-off-company',
  standardsAndPolicy = 'standards-and-policy',
  technicalStandard = 'technical-standard',
}

export const WorkCategoryLabels = {
  [WorkCategories.conference]: $localize`Conference`,
  [WorkCategories.intellectual_property]: $localize`Intellectual property`,
  [WorkCategories.other_output]: $localize`Other output`,
  [WorkCategories.publication]: $localize`Publication`,
}

export const WorkTypesLabels = {
  [WorkCategories.conference]: {
    [WorkConferenceTypes.conferenceAbstract]: 'Conference abstract',
    [WorkConferenceTypes.conferencePaper]: 'Conference paper',
    [WorkConferenceTypes.conferencePoster]: 'Conference poster',
  },
  [WorkCategories.publication]: {
    [WorkPublicationTypes.bookChapter]: 'Book chapter',
    [WorkPublicationTypes.bookReview]: 'Book review',
    [WorkPublicationTypes.book]: 'Book',
    [WorkPublicationTypes.dictionaryEntry]: 'Dictionary entry',
    [WorkPublicationTypes.dissertationThesis]: 'Dissertation/Thesis',
    [WorkPublicationTypes.editedBook]: 'Edited book',
    [WorkPublicationTypes.encyclopediaEntry]: 'Encyclopedia entry',
    [WorkPublicationTypes.journalArticle]: 'Journal article',
    [WorkPublicationTypes.journalIssue]: 'Journal issue',
    [WorkPublicationTypes.magazineArticle]: 'Magazine article',
    [WorkPublicationTypes.manual]: 'Manual',
    [WorkPublicationTypes.newsletterArticle]: 'Newsletter article',
    [WorkPublicationTypes.newspaperArticle]: 'Newspaper article',
    [WorkPublicationTypes.onlineResource]: 'Online resource',
    [WorkPublicationTypes.preprint]: 'Preprint',
    [WorkPublicationTypes.report]: 'Report',
    [WorkPublicationTypes.researchTool]: 'Research tool',
    [WorkPublicationTypes.supervisedStudentPublication]:
      'Supervised student publication',
    [WorkPublicationTypes.test]: 'Test',
    [WorkPublicationTypes.translation]: 'Translation',
    [WorkPublicationTypes.website]: 'Website',
    [WorkPublicationTypes.workingPaper]: 'Working paper',
  },

  [WorkCategories.intellectual_property]: {
    [WorkIntellectualPropertyTypes.disclosure]: 'Disclosure',
    [WorkIntellectualPropertyTypes.license]: 'License',
    [WorkIntellectualPropertyTypes.patent]: 'Patent',
    [WorkIntellectualPropertyTypes.registeredCopyright]: 'Registered copyright',
    [WorkIntellectualPropertyTypes.trademark]: 'Trademark',
  },
  [WorkCategories.other_output]: {
    [WorkOtherOutputTypes.annotation]: 'Annotation',
    [WorkOtherOutputTypes.artisticPerformance]: 'Artistic performance',
    [WorkOtherOutputTypes.dataManagementPlan]: 'Data management plan',
    [WorkOtherOutputTypes.dataSet]: 'Data set',
    [WorkOtherOutputTypes.invention]: 'Invention',
    [WorkOtherOutputTypes.lectureSpeech]: 'Lecture speech',
    [WorkOtherOutputTypes.physicalObject]: 'Physical object',
    [WorkOtherOutputTypes.researchTechnique]: 'Research technique',
    [WorkOtherOutputTypes.software]: 'software',
    [WorkOtherOutputTypes.spinOffCompany]: 'Spin off company',
    [WorkOtherOutputTypes.standardsAndPolicy]: 'Standards and policy',
    [WorkOtherOutputTypes.technicalStandard]: 'Technical Standard',
    [WorkOtherOutputTypes.other]: 'Other',
  },
}

export enum WorkDynamicTitles {
  publisher = 'Publisher',
  conferenceTitle = 'Conference title',
  bookTitle = 'Book title',
  journalTitle = 'Journal title',
  magazineTitle = 'Magazine title',
  newsletterTitle = 'Newsletter title',
  institution = 'Institution',
  custodian = 'Custodian',
  trademark = 'Trademark',
}

export const WorkTitleTypesLabels = {
  [WorkCategories.conference]: {
    [WorkConferenceTypes.conferenceAbstract]: WorkDynamicTitles.conferenceTitle,
    [WorkConferenceTypes.conferencePaper]: WorkDynamicTitles.conferenceTitle,
    [WorkConferenceTypes.conferencePoster]: WorkDynamicTitles.conferenceTitle,
  },
  [WorkCategories.publication]: {
    [WorkPublicationTypes.book]: WorkDynamicTitles.publisher,
    [WorkPublicationTypes.bookChapter]: WorkDynamicTitles.bookTitle,
    [WorkPublicationTypes.bookReview]: WorkDynamicTitles.publisher,
    [WorkPublicationTypes.dictionaryEntry]: WorkDynamicTitles.publisher,
    [WorkPublicationTypes.editedBook]: WorkDynamicTitles.publisher,
    [WorkPublicationTypes.dissertationThesis]: WorkDynamicTitles.journalTitle,
    [WorkPublicationTypes.encyclopediaEntry]: WorkDynamicTitles.publisher,
    [WorkPublicationTypes.journalArticle]: WorkDynamicTitles.journalTitle,
    [WorkPublicationTypes.journalIssue]: WorkDynamicTitles.journalTitle,
    [WorkPublicationTypes.magazineArticle]: WorkDynamicTitles.magazineTitle,
    [WorkPublicationTypes.manual]: WorkDynamicTitles.publisher,
    [WorkPublicationTypes.newsletterArticle]: WorkDynamicTitles.newsletterTitle,
    [WorkPublicationTypes.newspaperArticle]: WorkDynamicTitles.newsletterTitle,
    [WorkPublicationTypes.onlineResource]: WorkDynamicTitles.publisher,
    [WorkPublicationTypes.preprint]: WorkDynamicTitles.journalTitle,
    [WorkPublicationTypes.report]: WorkDynamicTitles.institution,
    [WorkPublicationTypes.researchTool]: WorkDynamicTitles.institution,
    [WorkPublicationTypes.supervisedStudentPublication]:
      WorkDynamicTitles.institution,
    [WorkPublicationTypes.test]: WorkDynamicTitles.institution,
    [WorkPublicationTypes.translation]: WorkDynamicTitles.publisher,
    [WorkPublicationTypes.website]: WorkDynamicTitles.publisher,
    [WorkPublicationTypes.workingPaper]: WorkDynamicTitles.publisher,
  },

  [WorkCategories.intellectual_property]: {
    [WorkIntellectualPropertyTypes.disclosure]: WorkDynamicTitles.publisher,
    [WorkIntellectualPropertyTypes.license]: WorkDynamicTitles.publisher,
    [WorkIntellectualPropertyTypes.patent]: WorkDynamicTitles.publisher,
    [WorkIntellectualPropertyTypes.registeredCopyright]:
      WorkDynamicTitles.publisher,
    [WorkIntellectualPropertyTypes.trademark]: WorkDynamicTitles.trademark,
  },
  [WorkCategories.other_output]: {
    [WorkOtherOutputTypes.annotation]: WorkDynamicTitles.custodian,
    [WorkOtherOutputTypes.artisticPerformance]: WorkDynamicTitles.publisher,
    [WorkOtherOutputTypes.dataManagementPlan]: WorkDynamicTitles.journalTitle,
    [WorkOtherOutputTypes.dataSet]: WorkDynamicTitles.publisher,
    [WorkOtherOutputTypes.invention]: WorkDynamicTitles.publisher,
    [WorkOtherOutputTypes.lectureSpeech]: WorkDynamicTitles.publisher,
    [WorkOtherOutputTypes.physicalObject]: WorkDynamicTitles.custodian,
    [WorkOtherOutputTypes.researchTechnique]: WorkDynamicTitles.publisher,
    [WorkOtherOutputTypes.software]: WorkDynamicTitles.journalTitle,
    [WorkOtherOutputTypes.spinOffCompany]: WorkDynamicTitles.publisher,
    [WorkOtherOutputTypes.standardsAndPolicy]: WorkDynamicTitles.publisher,
    [WorkOtherOutputTypes.technicalStandard]: WorkDynamicTitles.publisher,
    [WorkOtherOutputTypes.other]: WorkDynamicTitles.publisher,
  },
}

export const LanguageMap = {
  ab: 'Abkhazian',
  aa: 'Afar',
  af: 'Afrikaans',
  ak: 'Akan',
  sq: 'Albanian',
  am: 'Amharic',
  ar: 'Arabic',
  an: 'Aragonese',
  hy: 'Armenian',
  as: 'Assamese',
  av: 'Avaric',
  ae: 'Avestan',
  ay: 'Aymara',
  az: 'Azerbaijani',
  bm: 'Bambara',
  bn: 'Bangla',
  ba: 'Bashkir',
  eu: 'Basque',
  be: 'Belarusian',
  bh: 'Bihari',
  bi: 'Bislama',
  bs: 'Bosnian',
  br: 'Breton',
  bg: 'Bulgarian',
  my: 'Burmese',
  ca: 'Catalan',
  ch: 'Chamorro',
  ce: 'Chechen',
  zh_CN: 'Chinese (China)',
  zh_TW: 'Chinese (Taiwan)',
  cu: 'Church Slavic',
  cv: 'Chuvash',
  kw: 'Cornish',
  co: 'Corsican',
  cr: 'Cree',
  hr: 'Croatian',
  cs: 'Czech',
  da: 'Danish',
  dv: 'Divehi',
  nl: 'Dutch',
  dz: 'Dzongkha',
  en: 'English',
  eo: 'Esperanto',
  et: 'Estonian',
  ee: 'Ewe',
  fo: 'Faroese',
  fj: 'Fijian',
  fi: 'Finnish',
  fr: 'French',
  ff: 'Fulah',
  gl: 'Galician',
  lg: 'Ganda',
  ka: 'Georgian',
  de: 'German',
  el: 'Greek',
  gn: 'Guarani',
  gu: 'Gujarati',
  ht: 'Haitian Creole',
  ha: 'Hausa',
  iw: 'Hebrew',
  hz: 'Herero',
  hi: 'Hindi',
  ho: 'Hiri Motu',
  hu: 'Hungarian',
  is: 'Icelandic',
  io: 'Ido',
  ig: 'Igbo',
  in: 'Indonesian',
  ia: 'Interlingua',
  ie: 'Interlingue',
  iu: 'Inuktitut',
  ik: 'Inupiaq',
  ga: 'Irish',
  it: 'Italian',
  ja: 'Japanese',
  jv: 'Javanese',
  kl: 'Kalaallisut',
  kn: 'Kannada',
  kr: 'Kanuri',
  ks: 'Kashmiri',
  kk: 'Kazakh',
  km: 'Khmer',
  ki: 'Kikuyu',
  rw: 'Kinyarwanda',
  kv: 'Komi',
  kg: 'Kongo',
  ko: 'Korean',
  kj: 'Kuanyama',
  ku: 'Kurdish',
  ky: 'Kyrgyz',
  lo: 'Lao',
  la: 'Latin',
  lv: 'Latvian',
  li: 'Limburgish',
  ln: 'Lingala',
  lt: 'Lithuanian',
  lu: 'Luba-Katanga',
  lb: 'Luxembourgish',
  mk: 'Macedonian',
  mg: 'Malagasy',
  ms: 'Malay',
  ml: 'Malayalam',
  mt: 'Maltese',
  gv: 'Manx',
  mi: 'Maori',
  mr: 'Marathi',
  mh: 'Marshallese',
  mo: 'Moldavian',
  mn: 'Mongolian',
  na: 'Nauru',
  nv: 'Navajo',
  ng: 'Ndonga',
  ne: 'Nepali',
  nd: 'North Ndebele',
  se: 'Northern Sami',
  no: 'Norwegian',
  nb: 'Norwegian Bokmål',
  nn: 'Norwegian Nynorsk',
  ny: 'Nyanja',
  oc: 'Occitan',
  or: 'Odia',
  oj: 'Ojibwa',
  om: 'Oromo',
  os: 'Ossetic',
  pi: 'Pali',
  ps: 'Pashto',
  fa: 'Persian',
  pl: 'Polish',
  pt: 'Portuguese',
  pa: 'Punjabi',
  qu: 'Quechua',
  ro: 'Romanian',
  rm: 'Romansh',
  rn: 'Rundi',
  ru: 'Russian',
  sm: 'Samoan',
  sg: 'Sango',
  sa: 'Sanskrit',
  sc: 'Sardinian',
  gd: 'Scottish Gaelic',
  sr: 'Serbian',
  sn: 'Shona',
  ii: 'Sichuan Yi',
  sd: 'Sindhi',
  si: 'Sinhala',
  sk: 'Slovak',
  sl: 'Slovenian',
  so: 'Somali',
  nr: 'South Ndebele',
  st: 'Southern Sotho',
  es: 'Spanish',
  su: 'Sundanese',
  sw: 'Swahili',
  ss: 'Swati',
  sv: 'Swedish',
  tl: 'Tagalog',
  ty: 'Tahitian',
  tg: 'Tajik',
  ta: 'Tamil',
  tt: 'Tatar',
  te: 'Telugu',
  th: 'Thai',
  bo: 'Tibetan',
  ti: 'Tigrinya',
  to: 'Tongan',
  ts: 'Tsonga',
  tn: 'Tswana',
  tr: 'Turkish',
  tk: 'Turkmen',
  tw: 'Twi',
  uk: 'Ukrainian',
  ur: 'Urdu',
  ug: 'Uyghur',
  uz: 'Uzbek',
  ve: 'Venda',
  vi: 'Vietnamese',
  vo: 'Volapük',
  wa: 'Walloon',
  cy: 'Welsh',
  fy: 'Western Frisian',
  wo: 'Wolof',
  xh: 'Xhosa',
  ji: 'Yiddish',
  yo: 'Yoruba',
  za: 'Zhuang',
  zu: 'Zulu',
}

export const YearOption = {
  2031: '2031',
  2030: '2030',
  2029: '2029',
  2028: '2028',
  2027: '2027',
  2026: '2026',
  2025: '2025',
  2024: '2024',
  2023: '2023',
  2022: '2022',
  2021: '2021',
  2020: '2020',
  2019: '2019',
  2018: '2018',
  2017: '2017',
  2016: '2016',
  2015: '2015',
  2014: '2014',
  2013: '2013',
  2012: '2012',
  2011: '2011',
  2010: '2010',
  2009: '2009',
  2008: '2008',
  2007: '2007',
  2006: '2006',
  2005: '2005',
  2004: '2004',
  2003: '2003',
  2002: '2002',
  2001: '2001',
  2000: '2000',
  1999: '1999',
  1998: '1998',
  1997: '1997',
  1996: '1996',
  1995: '1995',
  1994: '1994',
  1993: '1993',
  1992: '1992',
  1991: '1991',
  1990: '1990',
  1989: '1989',
  1988: '1988',
  1987: '1987',
  1986: '1986',
  1985: '1985',
  1984: '1984',
  1983: '1983',
  1982: '1982',
  1981: '1981',
  1980: '1980',
  1979: '1979',
  1978: '1978',
  1977: '1977',
  1976: '1976',
  1975: '1975',
  1974: '1974',
  1973: '1973',
  1972: '1972',
  1971: '1971',
  1970: '1970',
  1969: '1969',
  1968: '1968',
  1967: '1967',
  1966: '1966',
  1965: '1965',
  1964: '1964',
  1963: '1963',
  1962: '1962',
  1961: '1961',
  1960: '1960',
  1959: '1959',
  1958: '1958',
  1957: '1957',
  1956: '1956',
  1955: '1955',
  1954: '1954',
  1953: '1953',
  1952: '1952',
  1951: '1951',
  1950: '1950',
  1949: '1949',
  1948: '1948',
  1947: '1947',
  1946: '1946',
  1945: '1945',
  1944: '1944',
  1943: '1943',
  1942: '1942',
  1941: '1941',
  1940: '1940',
  1939: '1939',
  1938: '1938',
  1937: '1937',
  1936: '1936',
  1935: '1935',
  1934: '1934',
  1933: '1933',
  1932: '1932',
  1931: '1931',
  1930: '1930',
  1929: '1929',
  1928: '1928',
  1927: '1927',
  1926: '1926',
  1925: '1925',
  1924: '1924',
  1923: '1923',
  1922: '1922',
  1921: '1921',
  1920: '1920',
  1919: '1919',
  1918: '1918',
  1917: '1917',
  1916: '1916',
  1915: '1915',
  1914: '1914',
  1913: '1913',
}
export const MonthOption = {
  '01': '01',
  '02': '02',
  '03': '03',
  '04': '04',
  '05': '05',
  '06': '06',
  '07': '07',
  '08': '08',
  '09': '09',
  10: '10',
  11: '11',
  12: '12',
}

export const DayOption = {
  '01': '01',
  '02': '02',
  '03': '03',
  '04': '04',
  '05': '05',
  '06': '06',
  '07': '07',
  '08': '08',
  '09': '09',
  10: '10',
  11: '11',
  12: '12',
  13: '13',
  14: '14',
  15: '15',
  16: '16',
  17: '17',
  18: '18',
  19: '19',
  20: '20',
  21: '21',
  22: '22',
  23: '23',
  24: '24',
  25: '25',
  26: '26',
  27: '27',
  28: '28',
  29: '29',
  30: '30',
  31: '31',
}

export const CitationTypes = {
  'formatted-apa': 'APA',
  bibtex: 'BIBTEX',
  'formatted-chicago': 'CHICAGO',
  'formatted-harvard': 'HARVARD',
  'formatted-ieee': 'IEEE',
  'formatted-mla': 'MLA',
  ris: 'RIS',
  'formatted-unspecified': 'UNSPECIFIED',
  'formatted-vancouver': 'VANCOUVER',
}

export interface WorkType {
  name: string
  description: string
  resolutionPrefix: string
}

export const WorkRelationships = {
  self: 'funded_by',
  'part-of': 'part-of',
  'version-of': 'version_of',
  'funded-by': 'funded_by',
}
